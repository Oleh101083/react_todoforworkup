{"version":3,"sources":["serviceWorker.js","Timer/Timer.jsx","Navbar.jsx","todo/Item.jsx","todo/ItemList.jsx","todo/AddItemForm.jsx","Clock/Clock.jsx","Date/Date.jsx","Monday.js","Tuesday.js","Wednesday.js","Thursday.js","Friday.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Timer","useState","seconds","setSeconds","isActive","setIsActive","useEffect","interval","setInterval","clearInterval","className","onClick","Navbar","to","Item","item","removeItem","type","ItemList","items","map","index","key","AddItemForm","addItem","setItem","onSubmit","e","preventDefault","value","maxlength","onChange","target","FormattedDate","props","date","toLocaleTimeString","Clock","state","Date","this","timerID","tick","setState","React","Component","dateObj","options","weekday","year","month","day","DateDayly","toLocaleDateString","Monday","setItems","JSON","parse","localStorage","getItem","stringify","itemToBeDeleted","filter","Tuesday","Wednesday","Thursday","Friday","App","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e36d0014.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer = () => {\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsActive(!isActive);\r\n  }\r\n\r\n  function reset() {\r\n    setSeconds(0);\r\n    setIsActive(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setSeconds(seconds => seconds + 1);\r\n      }, 60000);\r\n    } else if (!isActive && seconds !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, seconds]);\r\n\r\n  return (\r\n    <div className=\"app-timer\">\r\n      <div className=\"time\">\r\n        {seconds}хв\r\n      </div>\r\n      <div className=\"row\">\r\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\r\n          {isActive ? 'Пауза' : 'Старт'}\r\n        </button>\r\n        <button className=\"button\" onClick={reset}>\r\n          Відміна\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer; ","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n              <nav className=\"top_row\">\r\n    <ul>\r\n      <li><NavLink to=\"monday\">Понеділок</NavLink></li>\r\n      <li><NavLink to=\"tuesday\">Вівторок</NavLink></li>\r\n      <li><NavLink to=\"wednesday\">Середа</NavLink></li>\r\n      <li><NavLink to=\"thursday\">Четвер</NavLink></li>\r\n      <li><NavLink to=\"friday\">П'ятниця</NavLink></li>\r\n    </ul>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\n\r\nconst Item = ({ item, removeItem }) => {\r\n  \r\n    return (\r\n    <div className=\"item_row\">\r\n        <div>\r\n        <input type=\"checkbox\"/>\r\n      <span>{item}</span>\r\n        </div>\r\n       \r\n      \r\n      <button onClick={() => removeItem(item)}>X</button>\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Item as default };\r\n\r\n\r\n","import React from 'react';\r\nimport Item from './Item';\r\n\r\n\r\nconst ItemList = ({ items, removeItem }) => {\r\n  return (\r\n    <div className=\"items-container\">\r\n      <ul>\r\n        {items.map((item,index) => (\r\n          <li key={index}>\r\n            <Item key={item}\r\n             item={item}\r\n             removeItem={removeItem}  />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ItemList as default };\r\n","import React, { useState } from 'react';\r\n\r\n\r\nconst AddItemForm = ({ addItem }) => {\r\n  const [item, setItem] = useState('');\r\n\r\n\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addItem(item);\r\n    setItem('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input value={item} maxlength=\"25\"\r\n         onChange={(e) => setItem(e.target.value)} />\r\n        <button>&#10010;</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { AddItemForm as default };","import React from 'react'\r\n\r\nfunction FormattedDate(props) {\r\n    return <h2> {props.date.toLocaleTimeString()}</h2>;\r\n  }\r\n  \r\n  class Clock extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {date: new Date()};\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.timerID = setInterval(\r\n        () => this.tick(),\r\n        1000\r\n      );\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.timerID);\r\n    }\r\n  \r\n    tick() {\r\n      this.setState({\r\n        date: new Date()\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n\r\n          <FormattedDate date={this.state.date} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Clock\r\n","import React from 'react'\r\n\r\n\r\nlet dateObj = new Date();  \r\nlet options = { weekday: \"long\",  \r\n                year: \"numeric\",  \r\n                month: \"short\",  \r\n                day: \"numeric\" };  \r\n\r\n\r\nfunction DateDayly () {\r\n    return <div>\r\n{dateObj.toLocaleDateString(\"uk-UA\", options)}\r\n    </div>\r\n   \r\n  }\r\n  \r\n  \r\n\r\nexport default DateDayly \r\n","import React,{useEffect, useState} from 'react';\nimport ItemList from './todo/ItemList';\nimport AddItemForm from './todo/AddItemForm';\nimport Clock from './Clock/Clock'\nimport DateDayly from './Date/Date';\n\n\n\n\n\nconst Monday = () => {\n  const [items, setItems] = useState([]);\n  const addItem = (item) => {\n    // assuming no duplicates for demo purposes\n    setItems([...items, item]);\n  };\n  const removeItem = (itemToBeDeleted) => {\n    setItems(items.filter((item) => itemToBeDeleted !== item));\n  };\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items2'));\n    if (items) {\n      setItems(items);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('items2', JSON.stringify(items));\n  }, [items]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>Понеділок</h1>\n       <div className=\"wrapp_for-top\">\n       <Clock />\n     <DateDayly />\n       </div>\n        \n        <ItemList items={items} removeItem={removeItem} />\n        \n        <AddItemForm addItem={addItem} />\n\n       \n      </header>\n     \n    </div>\n  )\n}\n\nexport default Monday","import React,{useEffect, useState} from 'react';\nimport ItemList from './todo/ItemList';\nimport AddItemForm from './todo/AddItemForm';\nimport Clock from './Clock/Clock'\nimport DateDayly from './Date/Date';\n\n\n\n\n\nconst Tuesday = () => {\n  const [items, setItems] = useState([]);\n  const addItem = (item) => {\n    // assuming no duplicates for demo purposes\n    setItems([...items, item]);\n  };\n  const removeItem = (itemToBeDeleted) => {\n    setItems(items.filter((item) => itemToBeDeleted !== item));\n  };\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items4'));\n    if (items) {\n      setItems(items);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('items4', JSON.stringify(items));\n  }, [items]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>вівторок</h1>\n       <div className=\"wrapp_for-top\">\n       <Clock />\n     <DateDayly />\n       </div>\n        \n        <ItemList items={items} removeItem={removeItem} />\n        \n        <AddItemForm addItem={addItem} />\n\n       \n      </header>\n     \n    </div>\n  )\n}\n\nexport default Tuesday","import React,{useEffect, useState} from 'react';\nimport ItemList from './todo/ItemList';\nimport AddItemForm from './todo/AddItemForm';\nimport Clock from './Clock/Clock'\nimport DateDayly from './Date/Date';\n\n\n\n\n\nconst Wednesday = () => {\n  const [items, setItems] = useState([]);\n  const addItem = (item) => {\n    // assuming no duplicates for demo purposes\n    setItems([...items, item]);\n  };\n  const removeItem = (itemToBeDeleted) => {\n    setItems(items.filter((item) => itemToBeDeleted !== item));\n  };\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items'));\n    if (items) {\n      setItems(items);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('items', JSON.stringify(items));\n  }, [items]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>Середа</h1>\n       <div className=\"wrapp_for-top\">\n       <Clock />\n     <DateDayly />\n       </div>\n        \n        <ItemList items={items} removeItem={removeItem} />\n        <AddItemForm addItem={addItem} />\n\n       \n      </header>\n     \n    </div>\n  )\n}\n\nexport default Wednesday","import React,{useEffect, useState} from 'react';\nimport ItemList from './todo/ItemList';\nimport AddItemForm from './todo/AddItemForm';\nimport Clock from './Clock/Clock'\nimport DateDayly from './Date/Date';\n\n\n\n\n\nconst Thursday = () => {\n  const [items, setItems] = useState([]);\n  const addItem = (item) => {\n    // assuming no duplicates for demo purposes\n    setItems([...items, item]);\n  };\n  const removeItem = (itemToBeDeleted) => {\n    setItems(items.filter((item) => itemToBeDeleted !== item));\n  };\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items3'));\n    if (items) {\n      setItems(items);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('items3', JSON.stringify(items));\n  }, [items]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>Четвер</h1>\n       <div className=\"wrapp_for-top\">\n       <Clock />\n     <DateDayly />\n       </div>\n        \n        <ItemList items={items} removeItem={removeItem} />\n        \n        <AddItemForm addItem={addItem} />\n\n       \n      </header>\n     \n    </div>\n  )\n}\n\nexport default Thursday","import React,{useEffect, useState} from 'react';\nimport ItemList from './todo/ItemList';\nimport AddItemForm from './todo/AddItemForm';\nimport Clock from './Clock/Clock'\nimport DateDayly from './Date/Date';\n\n\n\n\n\nconst Friday = () => {\n  const [items, setItems] = useState([]);\n  const addItem = (item) => {\n    // assuming no duplicates for demo purposes\n    setItems([...items, item]);\n  };\n  const removeItem = (itemToBeDeleted) => {\n    setItems(items.filter((item) => itemToBeDeleted !== item));\n  };\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items1'));\n    if (items) {\n      setItems(items);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('items1', JSON.stringify(items));\n  }, [items]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>П'ятниця</h1>\n       <div className=\"wrapp_for-top\">\n       <Clock />\n     <DateDayly />\n       </div>\n        \n        <ItemList items={items} removeItem={removeItem} />\n        \n        <AddItemForm addItem={addItem} />\n\n       \n      </header>\n     \n    </div>\n  )\n}\n\nexport default Friday","import React from 'react';\nimport Timer from './Timer/Timer';\nimport Navbar from './Navbar';\nimport Monday from './Monday';\nimport Tuesday from './Tuesday';\nimport Wednesday from './Wednesday';\nimport Thursday from './Thursday';\nimport Friday from './Friday';\n\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\n\n\nconst App = () => {\n\n  return (\n    <BrowserRouter>\n<div>\n<Navbar />\n<Timer />\n<Route path='/monday' component={Monday}/>\n<Route path='/tuesday' component={Tuesday}/>\n<Route path='/wednesday' component={Wednesday}/>\n<Route path='/thursday' component={Thursday}/>\n<Route path='/friday' component={Friday}/>\n</div>\n    </BrowserRouter>\n\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}